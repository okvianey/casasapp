{"version":3,"file":"component---src-pages-404-js-9e11cc1a8d6fdc48d0e7.js","mappings":"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","sources":["webpack://casas/./src/pages/404.js","webpack://casas/./node_modules/@mui/material/Typography/typographyClasses.js","webpack://casas/./node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Typography } from \"@mui/material\"\n\nconst paragraphStyles = {\n  marginBottom: 48,\n}\n\nconst NotFoundPage = () => {\n  return (\n    <Layout>\n      <main>\n        <Typography variant=\"h1\">Página no encontrada</Typography>\n        <p style={paragraphStyles}>\n          Lo sentimos 😔, no pudimos encontrar lo que estás buscando.\n          <Link to=\"/\"> Ir al inicio </Link>.\n        </p>\n      </main>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const Head = () => <title>Not found</title>\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["paragraphStyles","marginBottom","NotFoundPage","React","Layout","Typography","variant","style","Link","to","Head","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","ref","themeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}